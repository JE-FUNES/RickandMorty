{"ast":null,"code":"// agregamos la funcionalidad que se va a realizar al momento de ejecutar las actions.\nimport { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actionTypes.js\";\nlet initialState = {\n  myFavorites: [],\n  allCharactersFav: []\n};\nexport default function reducer(state = initialState, action) {\n  // el destructuring de la action es {type, payload}\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        //mantengo y protejo el estado anterior\n        myFavorites: [...state.allCharactersFav, action.payload],\n        allCharactersFav: [...state.allCharactersFav, action.payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(fav => fav.id !== action.payload),\n        allCharactersFav: state.allCharactersFav.filter(fav => fav.id !== action.payload)\n      };\n    case FILTER:\n      const allCharactersFiltered = state.allCharactersFav.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: allCharactersFiltered\n      };\n    case ORDER:\n      const allCharactersFavCopy = [...state.allCharactersFav];\n      return {\n        ...state,\n        myFavorites:\n        // ternario\n        action.payload === \"A\" ? allCharactersFavCopy.sort((a, b) => a.id - b.id) //mayor a menor\n        : allCharactersFavCopy.sort((a, b) => b.id - a.id) // menor a mayor\n      };\n\n    default:\n      // jamas olvidartse de este caso, va si o si. siempre retona lo mismo\n      return {\n        ...state\n      };\n  }\n}","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharactersFav","reducer","state","action","type","payload","filter","fav","id","allCharactersFiltered","character","gender","allCharactersFavCopy","sort","a","b"],"sources":["D:/00-WebDeveloper/Repositorios GitHub/RickandMorty/src/redux/reducer.js"],"sourcesContent":["// agregamos la funcionalidad que se va a realizar al momento de ejecutar las actions.\r\nimport { ADD_FAV,  REMOVE_FAV, FILTER, ORDER} from \"./actionTypes.js\";\r\n\r\nlet initialState = {\r\n    myFavorites : [],\r\n    allCharactersFav: [],\r\n};\r\n\r\nexport default function reducer (state = initialState, action) { // el destructuring de la action es {type, payload}\r\n    switch(action.type) {\r\n        case ADD_FAV:\r\n            return {\r\n                ...state, //mantengo y protejo el estado anterior\r\n                myFavorites: [...state.allCharactersFav,action.payload],\r\n                allCharactersFav: [...state.allCharactersFav, action.payload]\r\n            }\r\n        case REMOVE_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter(fav => fav.id !== action.payload),\r\n                allCharactersFav: state.allCharactersFav.filter(fav => fav.id !== action.payload)\r\n                \r\n            }\r\n\r\n        case FILTER:\r\n            const allCharactersFiltered = state.allCharactersFav.filter(character => character.gender === action.payload)\r\n            return {\r\n                ...state,\r\n                myFavorites: allCharactersFiltered\r\n\r\n            }\r\n\r\n            case ORDER:\r\n                const allCharactersFavCopy = [...state.allCharactersFav]\r\n                return {\r\n                    ...state,\r\n                    myFavorites: // ternario\r\n                        action.payload === \"A\"\r\n                        ? allCharactersFavCopy.sort((a,b) => a.id - b.id) //mayor a menor\r\n                        : allCharactersFavCopy.sort((a,b) => b.id - a.id) // menor a mayor\r\n                    }\r\n       \r\n        default: // jamas olvidartse de este caso, va si o si. siempre retona lo mismo\r\n            return {\r\n                ...state\r\n    }\r\n}\r\n}"],"mappings":"AAAA;AACA,SAASA,OAAO,EAAGC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAErE,IAAIC,YAAY,GAAG;EACfC,WAAW,EAAG,EAAE;EAChBC,gBAAgB,EAAE;AACtB,CAAC;AAED,eAAe,SAASC,OAAOA,CAAEC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,EAAE;EAAE;EAC7D,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKV,OAAO;MACR,OAAO;QACH,GAAGQ,KAAK;QAAE;QACVH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,gBAAgB,EAACG,MAAM,CAACE,OAAO,CAAC;QACvDL,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAgB,EAAEG,MAAM,CAACE,OAAO;MAChE,CAAC;IACL,KAAKV,UAAU;MACX,OAAO;QACH,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACO,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;QACvEL,gBAAgB,EAAEE,KAAK,CAACF,gBAAgB,CAACM,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAEpF,CAAC;IAEL,KAAKT,MAAM;MACP,MAAMa,qBAAqB,GAAGP,KAAK,CAACF,gBAAgB,CAACM,MAAM,CAACI,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAKR,MAAM,CAACE,OAAO,CAAC;MAC7G,OAAO;QACH,GAAGH,KAAK;QACRH,WAAW,EAAEU;MAEjB,CAAC;IAED,KAAKZ,KAAK;MACN,MAAMe,oBAAoB,GAAG,CAAC,GAAGV,KAAK,CAACF,gBAAgB,CAAC;MACxD,OAAO;QACH,GAAGE,KAAK;QACRH,WAAW;QAAE;QACTI,MAAM,CAACE,OAAO,KAAK,GAAG,GACpBO,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,CAAC,CAAC;QAAA,EAChDI,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACP,EAAE,GAAGM,CAAC,CAACN,EAAE,CAAC,CAAC;MACtD,CAAC;;IAEb;MAAS;MACL,OAAO;QACH,GAAGN;MACf,CAAC;EACL;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}